---
title: "Exploration des jeux de données"
title-block-banner: false
# description: | 
#  Petite description de cette page.
# à changer
date: "2022-12-20"
# Modifier les détails que vous voulez
author:
  - name: "Amélie Levasseur-Raymond"
    # Votre site web perso ou github
    url: https://amelie-lr.github.io/
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    # orcid: 0000-0000-0000-0000

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: true
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
format: 
    html: 
        df-print: paged
---


```{r echo=FALSE, warning=FALSE, message=FALSE}
library(fs)
library(lubridate)
library(tidyverse)
library(skimr)
library(knitr)
library(psych)
library(zip)

# ma fonction pour créer my_theme afin de personnaliser et surtout uniformiser les visalisations
source("R/helper.R")
```


## Réimportation des données

```{r}

data_energy_cons_clean <- as_tibble(read.csv(file = "data/processed/owid-energy-consumption-data.csv"))

data_life_clean <- as_tibble(read.csv(file = "data/processed/gm-life-expectancy-data.csv"))

```

Vous pouvez télécharger les deux jeux de données nettoyés ci-dessous.

- [Energy](data/processed/owid-energy-consumption-data.csv)
- [Life Expectancy at Birth](data/processed/gm-life-expectancy-data.csv)

```{r}

zip(zipfile = "data/processed/data_package.zip", files = c("data/processed/owid-energy-consumption-data.csv", "data/processed/gm-life-expectancy-data.csv"))

```

Ou télécharger le .zip suivant contenant les deux fichiers : [ZIP](data/processed/data_package.zip)

## Première exploration

Observons à quoi ressemblent nos données.

Dans le jeu *Energy*, nous avons les `r ncol(data_energy_cons_clean)` variables suivantes :  
`r colnames(data_energy_cons_clean)`

Nous avons `r data_energy_cons_clean$country %>% unique() %>% length()` pays dans le jeu *Energy* et `r data_life_clean$country %>% unique() %>% length()` pays observés dans le jeu *Life Expectancy*. 

### Quelques statistiques

#### Energy

```{r}

data_energy_cons_clean %>%
    skim() %>%
    kable()

```

#### Life Expectancy at Birth

```{r}

data_life_clean %>%
    skim() %>%
    kable()

```

```{r echo=FALSE}

# En savoir plus sur les données 
#lapply(data_energy_cons_clean, summary)

# glimpse(data_life_clean)
# 
# data_life_clean %>%
#     group_by(country) %>%
#     summarise()

#anti_join(x = data_energy_cons_clean$country, y = data_life_clean$country)

# data_energy_cons_clean %>%
#     anti_join(data_life_clean,
#               by = "country") 

#describeBy(data_energy_cons_clean,group = data_energy_cons_clean$continent, mat = TRUE) 


```



## Life Expectancy at Birth

#### Tâche : calculer le temps écoulé **en jours** entre la première année que des données ont été récoltées pour chacun des pays et la production de ce rapport

Identifions d'abord la première année pour chaque pays.

```{r}

# source : https://stackoverflow.com/questions/60460203/finding-year-of-first-occurrence-in-r
life_country <- data_life_clean %>%
    # ne conserver que les variables utiles à la tâche
    select(country, year) %>%
    # grouper les observation par pays et ordonner selon l'année
    group_by(country) %>%
    arrange(country, year) %>%
    # ne conserver que la première année pour chaque pays
    slice_min(order_by = year, n = 1)

first_year <- unique(life_country$year)

```

Nous nous retrouvons donc avec les années suivantes : `r first_year`

Puisque nous n'avons pas la date exacte dans le jeu de données, mais seulement l'année, nous établirons cette date au 1er juillet, soit au milieu de l'année, pour calculer le nombre de jours écoulés.

```{r}

# préciser une date exacte
first_year <- as.Date(paste0(first_year, "-07-01"))

# calculer le nombre de jours écoulés
# source code : https://bookdown.org/Tazinho/Tidyverse-Cookbook/dates-and-times.html
# source timezone : https://rdrr.io/r/base/timezones.html
days_passed <- difftime(lubridate::ymd(first_year, tz = Sys.timezone()), 
                        lubridate::ymd(today(), tz = Sys.timezone()), 
                        units = "days") %>%
    as.double() %>%
    round() %>%
    abs()

countries_1800 <- paste(life_country$country[life_country$year == "1800"], collapse = ", ")
countries_1950 <- paste(life_country$country[life_country$year == "1950"], collapse = ", ")


tibble(c(countries_1800, countries_1950), lubridate::year(first_year), days_passed) %>%
    rename(first_year = `lubridate::year(first_year)`,
           countries = `c(countries_1800, countries_1950)`) %>%
    kable()

```

## Combinaison des deux jeux

```{r}

data_merged <- merge(data_energy_cons_clean,
                  data_life_clean,
                  by = c("country", "year", "iso_code")) %>%
    tibble()

```

Afin de simplifier l'analyse, nous allons mettre les différentes consommations par habitant et les convertir en kW/h.

```{r}

# convertir les consommations par habitant et en kilowatt/heure
data_merged_per_capita <- data_merged %>%
    mutate(across(.cols = contains("consumption"), .fns = ~ .x / population * 1000000000, .names = "{.col}_per_capita", .keep = "all")) %>%
    select(!biofuel_consumption:wind_consumption)

kable(slice_sample(data_merged_per_capita, n = 5))

```


## Visualisation

#### Espérance de vie selon l'année

```{r}

data_merged_per_capita %>%
    group_by(year) %>%
    ggplot() +
    geom_line(mapping = aes(x = year, y = life_expectancy, color = continent, group = country), 
                na.rm = TRUE) +
    my_theme()

```

On constate rapidement une baisse de l'espérance de vie lors des deux gueres mondiales. 
Les autres points qui se trouvent sous la masse principale indiquent probablement des événements précis qui ont fait plusieurs morts dans des pays en particulier.


#### Évolution de la population du Canada

```{r}

data_merged_per_capita %>%
    filter(country == "Canada") %>%
    ggplot() +
      geom_line(mapping = aes(x = year, y = population, colour = country), 
                na.rm = TRUE) +
    my_theme()

```

#### Consommation d'énergie fossile vs renouvelable (par habitant)

```{r}

data_merged_per_capita %>%
    ggplot() +
      geom_point(mapping = aes(x = fossil_fuel_consumption_per_capita, y = renewables_consumption_per_capita, color = continent), 
                 na.rm = TRUE) +
    my_theme()

```
On peut constater que l'Asie est une grande consommatrice d'énergie fossile, tandis que l'Europe a une tendance vers le renouvelable. Il faut tout de même pas se leurer puisque les deux axes ne sont pas gradués de la même façon. La consommation d'énergie renouvelable est bien en-deça de celle des énergies fossiles.


#### Consommation d'énergie par habitant vs espérance de vie en 2020

```{r}

data_merged_per_capita %>%
    filter(year == 2020) %>%
    ggplot() +
      geom_point(mapping = aes(x = life_expectancy, y = primary_energy_consumption_per_capita, color = continent), 
                 na.rm = TRUE) +
    my_theme()

```
On peut observer une légère tendance à consommer plus par année là où l'on vie plus longtemps.


#### Évolution de la consommation d'énergie primaire par habitant

```{r}

data_merged_per_capita %>%
    ggplot() +
      geom_line(mapping = aes(x = year, y = primary_energy_consumption_per_capita, color = continent, group = country), 
                 na.rm = TRUE) +
    xlim(1960,2025) +
    my_theme()

```

```{r echo=FALSE}

# data_pivot <- data_merged_per_capita %>%
#     select(-primary_energy_consumption_per_capita, -fossil_fuel_consumption_per_capita) %>%
#     pivot_longer(cols = contains("capita"),
#                  names_to = "energy_type",
#                  values_to = "consumption")
# 
# data_pivot %>%
#     group_by(continent) %>%
#     ggplot() +
#       geom_point(mapping = aes(x = year, y = consumption, color = energy_type), 
#                  na.rm = TRUE) +
#     xlim(1960,2025) +
#     my_theme()

```
